AWSTemplateFormatVersion: 2010-09-09
Metadata:
  License: Apache-2.0
Description: "Creates an ETCD cluster in ASG"

Parameters:
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.small
    AllowedValues: [t1.micro, t2.nano, t2.micro, t2.small, t2.medium, t2.large, m1.small,
      m1.medium, m1.large, m1.xlarge, m2.xlarge, m2.2xlarge, m2.4xlarge, m3.medium,
      m3.large, m3.xlarge, m3.2xlarge, m4.large, m4.xlarge, m4.2xlarge, m4.4xlarge,
      m4.10xlarge, c1.medium, c1.xlarge, c3.large, c3.xlarge, c3.2xlarge, c3.4xlarge,
      c3.8xlarge, c4.large, c4.xlarge, c4.2xlarge, c4.4xlarge, c4.8xlarge, g2.2xlarge,
      g2.8xlarge, r3.large, r3.xlarge, r3.2xlarge, r3.4xlarge, r3.8xlarge, i2.xlarge,
      i2.2xlarge, i2.4xlarge, i2.8xlarge, d2.xlarge, d2.2xlarge, d2.4xlarge, d2.8xlarge,
      hi1.4xlarge, hs1.8xlarge, cr1.8xlarge, cc2.8xlarge, cg1.4xlarge]
    ConstraintDescription: must be a valid EC2 instance type.
  Subnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Subnet IDs to use
  VPC:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID that matches subnet IDs
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Key Name to use to access instance
  AccessLocation:
    Description: The IP address range to access ETCD Cluster. Put you local VPC range
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    ConstraintDescription: must be a valid IP CIDR range of the form x.x.x.x/x.

Resources:
  LaunchConfig:
    Type: AWS::AutoScaling::LaunchConfiguration
    Properties:
      ImageId: ami-157e5566
      SecurityGroups: [!Ref 'InstanceSecurityGroup']
      InstanceType: !Ref 'InstanceType'
      AssociatePublicIpAddress: true
      IamInstanceProfile: !Ref 'EtcdClusterInstanceProfile'
      KeyName: !Ref 'KeyName'
      UserData:
        Fn::Base64: |
          #!/bin/bash

            mkdir -p /opt
            curl -Lq -o /opt/etcd-bootstrap https://github.com/stylight/etcd-bootstrap/releases/download/pre-release/etcd-bootstrap
            chmod +x /opt/etcd-bootstrap
            /opt/etcd-bootstrap -output env | tee /etc/etcd.env

            mkdir /etc/systemd/system/etcd2.service.d
            echo -e "[Service]\nEnvironmentFile=/etc/etcd.env\n" | tee /etc/systemd/system/etcd2.service.d/override.conf

            systemctl disable etcd.service
            systemctl enable etcd2.service
            systemctl start etcd2.service
  EtcdASGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      LaunchConfigurationName: !Ref 'LaunchConfig'
      MinSize: '1'
      MaxSize: '3'
      DesiredCapacity: 3
      Tags:
        -
          Key: Name
          Value: etcd-bootstrap-test
          PropagateAtLaunch: true
      VPCZoneIdentifier: !Ref 'Subnets'
  InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable SSH access and ETCD 2379-2380
      VpcId: !Ref 'VPC'
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '22'
        ToPort: '22'
        CidrIp: !Ref 'AccessLocation'
      - IpProtocol: tcp
        FromPort: '2379'
        ToPort: '2380'
        CidrIp: !Ref 'AccessLocation'
  EtcdClusterInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Roles: [!Ref 'DescribeASGRole']
  DescribeASGRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [ec2.amazonaws.com]
          Action: ['sts:AssumeRole']
      Path: /
      Policies:
      - PolicyName: describe-instance
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action: ['ec2:DescribeInstances']
            Resource: '*'
      - PolicyName: describe-asg
        PolicyDocument:
          Statement:
          - Effect: Allow
            Action: ['autoscaling:DescribeAutoScalingGroups', 'autoscaling:DescribeAutoScalingInstances']
            Resource: '*'
